(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{462:function(t,e,r){"use strict";r.r(e);var s=r(13),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",[t._v("Settings Importers")]),t._v(" "),r("p",[t._v("For lack of a better word, "),r("em",[t._v("Settings Importers")]),t._v(" refer to any importers that don't benefit from using the Element API to import data. While all Elements follow a similar import structure, settings may vary significantly from one another. Some examples include Fields, Entry Types, Asset Sources, and User Groups.")]),t._v(" "),r("p",[t._v("Add support for importing any Craft or custom plugin settings by creating a Settings Importer integration.")]),t._v(" "),r("p",[t._v("To add support for your custom settings you will need to:")]),t._v(" "),r("ol",[r("li",[t._v("Create a Settings Importer class that extends BaseSproutImportSettingsImporter")]),t._v(" "),r("li",[t._v("Register your Settings Importer")])]),t._v(" "),r("div",{pre:!0},[r("p",[t._v("Sprout Import extends itself to add support for the default Settings Importers for Craft and Craft Commerce. Please refer to example Settings Importers in "),r("code",[t._v("sproutimport/integrations/sproutimport")]),t._v(" and the "),r("code",[t._v("BaseSproutImportSettingsImporter")]),t._v(" and "),r("code",[t._v("BaseSproutImportImporter")]),t._v(" Classes for more details.")])]),r("p",[t._v("Your importer will manage:")]),t._v(" "),r("ul",[r("li",[t._v("Defining the data model you wish to import")]),t._v(" "),r("li",[t._v("Populating the model")]),t._v(" "),r("li",[t._v("Saving the model")]),t._v(" "),r("li",[t._v("Deleting the model (for seed data)")])]),t._v(" "),r("div",{pre:!0},[r("p",[t._v("Once you have created your custom Settings Importer you will need to register it in your primary plugin class via the "),r("code",[t._v("registerSproutImportImporters")]),t._v(" hook. For example:")])]),r("div",{staticClass:"language-php extra-class"},[r("pre",{pre:!0,attrs:{class:"language-php"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSproutImportImporters")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Commerce_ProductTypeSproutImportSettingsImporter")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h2",{attrs:{id:"settings-integrations"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#settings-integrations"}},[t._v("#")]),t._v(" Settings Integrations")]),t._v(" "),r("p",[t._v("The following plugins have Settings Importer integrations:")]),t._v(" "),r("ul",[r("li",[t._v("Sprout Email Campaign Type Settings")])])])}),[],!1,null,null,null);e.default=o.exports}}]);