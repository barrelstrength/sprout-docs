(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{586:function(t,s,e){"use strict";e.r(s);var n=e(34),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",[t._v("Settings")]),t._v(" "),e("div",{pre:!0},[e("p",[t._v("Settings can be managed in the Control Panel "),e("em",[t._v("Sprout Redirects â†’ Settings")]),t._v(" or via a config file in "),e("code",[t._v("config/sprout-redirects.php")])])]),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The name to display in the control panel in place of the plugin name")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'pluginNameOverride'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Sprout Redirects'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Process Redirect rules and log 404 requests.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'enableRedirects'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Log 'Page Not Found' errors as 404 Redirects")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'enable404RedirectLog'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// How to match 404 requests with Redirect records already captured in")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//the database.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// urlWithQueryStrings: match the entire URL including query strings")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// urlWithoutQueryStrings: remove all parameters from the request URL")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   before searching for a match")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'redirectMatchStrategy'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'urlWithoutQueryStrings'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// How to treat query strings after processing a redirect")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// removeQueryStrings - remove the query string from the incoming")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   URL entirely")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// appendQueryStrings - add any query string from the incoming URL to")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   the New Url")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'queryStringStrategy'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'removeQueryStrings'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable to capture the IP Address used when a 404 request is saved")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'trackRemoteIp'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The target number of 404 Redirects that will be stored in the database")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// per-site, after the cleanup task runs.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'total404Redirects'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The probability that the 404 Redirect cleanup task will run each")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// web request")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 - None")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100000 - 1 in 10")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10000 - 1 in 100")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1000 - selected>1 in 1,000")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100 - 1 in 10,000")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10 - 1 in 100,000")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 - 1 in 1,000,000")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cleanupProbability'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add any regular expression patterns you wish to exclude from the")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Redirect log. Overriding this setting will override any updates made by")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// the "Add to Excluded URLs" action.')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'excludedUrlPatterns' => ''")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);